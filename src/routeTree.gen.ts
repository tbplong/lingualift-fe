/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from "./routes/__root";
import { Route as IndexRouteImport } from "./routes/index";
import { Route as SignupIndexRouteImport } from "./routes/signup/index";
import { Route as LoginIndexRouteImport } from "./routes/login/index";
import { Route as AboutIndexRouteImport } from "./routes/about/index";

const IndexRoute = IndexRouteImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRouteImport,
} as any);
const SignupIndexRoute = SignupIndexRouteImport.update({
  id: "/signup/",
  path: "/signup/",
  getParentRoute: () => rootRouteImport,
} as any);
const LoginIndexRoute = LoginIndexRouteImport.update({
  id: "/login/",
  path: "/login/",
  getParentRoute: () => rootRouteImport,
} as any);
const AboutIndexRoute = AboutIndexRouteImport.update({
  id: "/about/",
  path: "/about/",
  getParentRoute: () => rootRouteImport,
} as any);

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute;
  "/about": typeof AboutIndexRoute;
  "/login": typeof LoginIndexRoute;
  "/signup": typeof SignupIndexRoute;
}
export interface FileRoutesByTo {
  "/": typeof IndexRoute;
  "/about": typeof AboutIndexRoute;
  "/login": typeof LoginIndexRoute;
  "/signup": typeof SignupIndexRoute;
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport;
  "/": typeof IndexRoute;
  "/about/": typeof AboutIndexRoute;
  "/login/": typeof LoginIndexRoute;
  "/signup/": typeof SignupIndexRoute;
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: "/" | "/about" | "/login" | "/signup";
  fileRoutesByTo: FileRoutesByTo;
  to: "/" | "/about" | "/login" | "/signup";
  id: "__root__" | "/" | "/about/" | "/login/" | "/signup/";
  fileRoutesById: FileRoutesById;
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  AboutIndexRoute: typeof AboutIndexRoute;
  LoginIndexRoute: typeof LoginIndexRoute;
  SignupIndexRoute: typeof SignupIndexRoute;
}

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/signup/": {
      id: "/signup/";
      path: "/signup";
      fullPath: "/signup";
      preLoaderRoute: typeof SignupIndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/login/": {
      id: "/login/";
      path: "/login";
      fullPath: "/login";
      preLoaderRoute: typeof LoginIndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/about/": {
      id: "/about/";
      path: "/about";
      fullPath: "/about";
      preLoaderRoute: typeof AboutIndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutIndexRoute: AboutIndexRoute,
  LoginIndexRoute: LoginIndexRoute,
  SignupIndexRoute: SignupIndexRoute,
};
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();
